Live Text:
  Setup:
    ✔ Setup Redux @done(22-12-01 11:29)
    ✔ Setup Github @done(22-12-01 11:35)
  To-Do:
    ☐ Do the UI/Prototype
      ✔ I have the form input styled @done(22-12-20 14:59)
      ☐ Style the global view
        ☐ Remove the @
        ✔ Add Time Stamp @done(23-01-13 16:53)
          ✔ This should be an easy way to get myself back into the swing of things. @done(23-01-13 16:53)
          ✔ Pretty simple with day.js @done(23-01-13 16:53)
        ☐ Different style depending on update type
        ☐ Add Share bar
      ✔ Ability to cancel adding post @done(22-12-20 17:03)
      ☐ Ability to edit post 
        ✔ Fields to edit @done(23-02-08 13:39)
          ✔ Title @done(23-02-08 13:39)
          ✔ Subtitle @done(23-02-08 13:39)
          ✔ Body @done(23-02-08 13:39)
        ✔ Close edit mode on save @done(23-02-08 13:59)
        ✔ Remove border around fields @done(23-02-09 18:26)
        ✔ It should be obvious the post is being edited. @done(23-02-09 18:26)
        ☐ Add formatting options to edit fields
        ☐ The page junps when toggling edit mode.
          ...i think this is the author input rendering  every time state refreshes.

      ☐ Post Control Bar
        ✔ Create single codebase that can act as control for edit, hide and delete @done(23-02-09 18:26)
        ✔ Style control bar @done(23-02-09 18:52)
          ... also made the jump between to edit less jarring by moving the timestamp and social media bar out of the edit mode check.


      ✔ Ability to delete post / hide post @done(23-01-20 16:37)
        ✔ It should be more obvious that a post is hidden @done(23-02-09 19:10)
      ☐ Ability to add video
        ☐ i think this is just a part of tiptap now
      ☐ Add Twitter card
      ☐ Create Login / Logout system
      


// React redux for state management

// Tiptap for text editor
  https://tiptap.dev/

// uuidv4 for unique id
  https://www.npmjs.com/package/uuidv4
    npm install uuidv4

// Day.js for date and timestamp
  https://day.js.org/en/
  install - npm install dayjs